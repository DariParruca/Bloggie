@model Bloggie.Web.Models.ViewModels.UserViewModel
@{
}

@if (TempData["AddUser"] != null || TempData["DeleteUser"] != null)
{
    <div id="successAlert" class="alert alert-success text-center" role="alert">
        <div class="row align-items-center">
            <div class="col">@TempData["AddUser"] @TempData["DeleteUser"]</div>
            <div class="col-auto">
                <button type="button" class="btn-close" aria-label="Close" onclick="closeAlert()"></button>
            </div>
        </div>
    </div>
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1 class="h3 text-black">Users - Admin Functionality</h1>
    </div>
</div>

<div class="container py-4">
    <div class="d-flex justify-content-end mb-3">
        <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#modalCreateUser">
            Create User
        </button>
    </div>

    @if (Model.Users != null && Model.Users.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Username</th>
                        <th scope="col">Email</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Username</td>
                            <td>@user.EmailAddress</td>
                            <td>
                                <form method="post" asp-controller="AdminUsers" asp-action="Delete" asp-route-id="@user.Id">
                                    <button class="btn btn-danger btn-sm" type="submit">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p class="text-muted text-center">No users found!</p>
    }
</div>

<form method="post">
    <div class="modal fade" id="modalCreateUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title h5" id="exampleModalLabel">Create New User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" class="form-control" asp-for="Username" required />
                        <span class="text-danger" asp-validation-for="Username"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email Address</label>
                        <input type="text" class="form-control" asp-for="Email" required />
                        <span class="text-danger" asp-validation-for="Email"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" id="password" name="Password" required minlength="6" />
                        <span class="text-danger" id="password-validation-error"></span>
                        <p class="text-muted" id="passwordRequirements">
                            Password must have at least:
                            <ul>
                                <li id="lengthReq">6 characters</li>
                                <li id="upperReq">1 uppercase letter</li>
                                <li id="specialReq">1 special character</li>
                                <li id="numberReq">1 number</li>
                            </ul>
                        </p>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" id="chUserRole" class="form-check-input" value="User" checked disabled />
                            <label class="form-check-label" for="chkUserRole">User Role</label>
                        </div>

                        @if (User.IsInRole("SuperAdmin"))
                        {
                            <div class="form-check">
                                <input type="checkbox" id="chUserRole" class="form-check-input" asp-for="AdminRoleCheckbox" />
                                <label class="form-check-label" for="chkUserRole">Admin Role</label>
                            </div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" onclick="return onSubmit()">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function closeAlert() {
        document.getElementById("successAlert").style.display = "none";
    }

    // Hide the success alert after 3 seconds
    window.setTimeout(function () {
        document.getElementById("successAlert").style.display = "none";
    }, 3000);




    function onSubmit() {
        if (!validatePassword()) {
            return false; // Prevent form submission if password is not valid
        }
        return true; // Allow form submission if password is valid
    }
    function validatePassword() {
        var password = document.getElementById("password").value;
        var passwordValidationError = document.getElementById("password-validation-error");

        // Reset previous error message
        passwordValidationError.innerHTML = "";

        // Regular expressions for password requirements
        var upperCaseRegex = /[A-Z]/;
        var numberRegex = /[0-9]/;
        var specialCharRegex = /[^A-Za-z0-9]/;

        if (password.length < 6) {
            passwordValidationError.innerHTML = "Password must have at least 6 characters";
            return false;
        }
        if (!upperCaseRegex.test(password)) {
            passwordValidationError.innerHTML = "Password must contain at least one uppercase letter";
            return false;
        }
        if (!numberRegex.test(password)) {
            passwordValidationError.innerHTML = "Password must contain at least one number";
            return false;
        }
        if (!specialCharRegex.test(password)) {
            passwordValidationError.innerHTML = "Password must contain at least one special character";
            return false;
        }

        return true;
    }
</script>